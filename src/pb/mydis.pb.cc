// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mydis.proto

#include "mydis.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_mydis_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mydis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Field;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mydis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Mydis_DbOperate_Condition;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mydis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Mydis_DbOperate_OrderBy;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mydis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Result_DataLocate;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mydis_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Mydis_DbOperate_ConditionGroup;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mydis_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Mydis_RedisOperate;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mydis_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Record;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mydis_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Mydis_DbOperate;
}  // namespace protobuf_mydis_2eproto
namespace neb {
class Mydis_RedisOperateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Mydis_RedisOperate>
      _instance;
} _Mydis_RedisOperate_default_instance_;
class Mydis_DbOperate_ConditionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Mydis_DbOperate_Condition>
      _instance;
} _Mydis_DbOperate_Condition_default_instance_;
class Mydis_DbOperate_ConditionGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Mydis_DbOperate_ConditionGroup>
      _instance;
} _Mydis_DbOperate_ConditionGroup_default_instance_;
class Mydis_DbOperate_OrderByDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Mydis_DbOperate_OrderBy>
      _instance;
} _Mydis_DbOperate_OrderBy_default_instance_;
class Mydis_DbOperateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Mydis_DbOperate>
      _instance;
} _Mydis_DbOperate_default_instance_;
class MydisDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Mydis>
      _instance;
} _Mydis_default_instance_;
class RecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Record>
      _instance;
} _Record_default_instance_;
class FieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Field>
      _instance;
} _Field_default_instance_;
class Result_DataLocateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Result_DataLocate>
      _instance;
} _Result_DataLocate_default_instance_;
class ResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Result>
      _instance;
} _Result_default_instance_;
}  // namespace neb
namespace protobuf_mydis_2eproto {
static void InitDefaultsMydis_RedisOperate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::neb::_Mydis_RedisOperate_default_instance_;
    new (ptr) ::neb::Mydis_RedisOperate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::neb::Mydis_RedisOperate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Mydis_RedisOperate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMydis_RedisOperate}, {
      &protobuf_mydis_2eproto::scc_info_Field.base,}};

static void InitDefaultsMydis_DbOperate_Condition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::neb::_Mydis_DbOperate_Condition_default_instance_;
    new (ptr) ::neb::Mydis_DbOperate_Condition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::neb::Mydis_DbOperate_Condition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Mydis_DbOperate_Condition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMydis_DbOperate_Condition}, {}};

static void InitDefaultsMydis_DbOperate_ConditionGroup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::neb::_Mydis_DbOperate_ConditionGroup_default_instance_;
    new (ptr) ::neb::Mydis_DbOperate_ConditionGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::neb::Mydis_DbOperate_ConditionGroup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Mydis_DbOperate_ConditionGroup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMydis_DbOperate_ConditionGroup}, {
      &protobuf_mydis_2eproto::scc_info_Mydis_DbOperate_Condition.base,}};

static void InitDefaultsMydis_DbOperate_OrderBy() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::neb::_Mydis_DbOperate_OrderBy_default_instance_;
    new (ptr) ::neb::Mydis_DbOperate_OrderBy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::neb::Mydis_DbOperate_OrderBy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Mydis_DbOperate_OrderBy =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMydis_DbOperate_OrderBy}, {}};

static void InitDefaultsMydis_DbOperate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::neb::_Mydis_DbOperate_default_instance_;
    new (ptr) ::neb::Mydis_DbOperate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::neb::Mydis_DbOperate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Mydis_DbOperate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsMydis_DbOperate}, {
      &protobuf_mydis_2eproto::scc_info_Field.base,
      &protobuf_mydis_2eproto::scc_info_Mydis_DbOperate_ConditionGroup.base,
      &protobuf_mydis_2eproto::scc_info_Mydis_DbOperate_OrderBy.base,}};

static void InitDefaultsMydis() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::neb::_Mydis_default_instance_;
    new (ptr) ::neb::Mydis();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::neb::Mydis::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Mydis =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMydis}, {
      &protobuf_mydis_2eproto::scc_info_Mydis_RedisOperate.base,
      &protobuf_mydis_2eproto::scc_info_Mydis_DbOperate.base,}};

static void InitDefaultsRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::neb::_Record_default_instance_;
    new (ptr) ::neb::Record();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::neb::Record::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Record =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRecord}, {
      &protobuf_mydis_2eproto::scc_info_Field.base,}};

static void InitDefaultsField() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::neb::_Field_default_instance_;
    new (ptr) ::neb::Field();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::neb::Field::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Field =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsField}, {}};

static void InitDefaultsResult_DataLocate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::neb::_Result_DataLocate_default_instance_;
    new (ptr) ::neb::Result_DataLocate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::neb::Result_DataLocate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Result_DataLocate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResult_DataLocate}, {}};

static void InitDefaultsResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::neb::_Result_default_instance_;
    new (ptr) ::neb::Result();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::neb::Result::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Result =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsResult}, {
      &protobuf_mydis_2eproto::scc_info_Record.base,
      &protobuf_mydis_2eproto::scc_info_Result_DataLocate.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Mydis_RedisOperate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Mydis_DbOperate_Condition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Mydis_DbOperate_ConditionGroup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Mydis_DbOperate_OrderBy.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Mydis_DbOperate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Mydis.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Record.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Field.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Result_DataLocate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Result.base);
}

::google::protobuf::Metadata file_level_metadata[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_RedisOperate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_RedisOperate, key_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_RedisOperate, redis_cmd_read_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_RedisOperate, redis_cmd_write_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_RedisOperate, op_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_RedisOperate, fields_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_RedisOperate, key_ttl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_RedisOperate, redis_structure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_RedisOperate, data_purpose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_RedisOperate, hash_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_DbOperate_Condition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_DbOperate_Condition, relation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_DbOperate_Condition, col_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_DbOperate_Condition, col_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_DbOperate_Condition, col_values_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_DbOperate_Condition, col_name_right_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_DbOperate_ConditionGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_DbOperate_ConditionGroup, relation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_DbOperate_ConditionGroup, condition_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_DbOperate_OrderBy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_DbOperate_OrderBy, relation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_DbOperate_OrderBy, col_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_DbOperate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_DbOperate, query_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_DbOperate, table_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_DbOperate, fields_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_DbOperate, conditions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_DbOperate, groupby_col_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_DbOperate, orderby_col_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_DbOperate, group_relation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_DbOperate, limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_DbOperate, limit_from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis_DbOperate, mod_factor_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis, section_factor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis, redis_operate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Mydis, db_operate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Record, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Record, field_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Field, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Field, col_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Field, col_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Field, col_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Field, col_as_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Result_DataLocate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Result_DataLocate, section_from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Result_DataLocate, section_to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Result_DataLocate, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Result_DataLocate, divisor_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Result, err_no_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Result, err_msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Result, total_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Result, current_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Result, record_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Result, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::neb::Result, locate_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::neb::Mydis_RedisOperate)},
  { 14, -1, sizeof(::neb::Mydis_DbOperate_Condition)},
  { 24, -1, sizeof(::neb::Mydis_DbOperate_ConditionGroup)},
  { 31, -1, sizeof(::neb::Mydis_DbOperate_OrderBy)},
  { 38, -1, sizeof(::neb::Mydis_DbOperate)},
  { 53, -1, sizeof(::neb::Mydis)},
  { 61, -1, sizeof(::neb::Record)},
  { 67, -1, sizeof(::neb::Field)},
  { 76, -1, sizeof(::neb::Result_DataLocate)},
  { 85, -1, sizeof(::neb::Result)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::neb::_Mydis_RedisOperate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::neb::_Mydis_DbOperate_Condition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::neb::_Mydis_DbOperate_ConditionGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::neb::_Mydis_DbOperate_OrderBy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::neb::_Mydis_DbOperate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::neb::_Mydis_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::neb::_Record_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::neb::_Field_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::neb::_Result_DataLocate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::neb::_Result_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "mydis.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013mydis.proto\022\003neb\"\214\013\n\005Mydis\022\026\n\016section_"
      "factor\030\001 \001(\r\022.\n\rredis_operate\030\002 \001(\0132\027.ne"
      "b.Mydis.RedisOperate\022(\n\ndb_operate\030\003 \001(\013"
      "2\024.neb.Mydis.DbOperate\032\237\002\n\014RedisOperate\022"
      "\020\n\010key_name\030\001 \001(\014\022\026\n\016redis_cmd_read\030\002 \001("
      "\t\022\027\n\017redis_cmd_write\030\003 \001(\t\0225\n\007op_type\030\004 "
      "\001(\0162$.neb.Mydis.RedisOperate.OPERATE_TYP"
      "E\022\032\n\006fields\030\005 \003(\0132\n.neb.Field\022\017\n\007key_ttl"
      "\030\006 \001(\005\022\027\n\017redis_structure\030\007 \001(\005\022\024\n\014data_"
      "purpose\030\010 \001(\005\022\020\n\010hash_key\030\t \001(\014\"\'\n\014OPERA"
      "TE_TYPE\022\n\n\006T_READ\020\000\022\013\n\007T_WRITE\020\001\032\356\007\n\tDbO"
      "perate\0225\n\nquery_type\030\001 \001(\0162!.neb.Mydis.D"
      "bOperate.E_QUERY_TYPE\022\022\n\ntable_name\030\002 \001("
      "\t\022\032\n\006fields\030\003 \003(\0132\n.neb.Field\0227\n\nconditi"
      "ons\030\004 \003(\0132#.neb.Mydis.DbOperate.Conditio"
      "nGroup\022\023\n\013groupby_col\030\005 \003(\t\0221\n\013orderby_c"
      "ol\030\006 \003(\0132\034.neb.Mydis.DbOperate.OrderBy\022F"
      "\n\016group_relation\030\007 \001(\0162..neb.Mydis.DbOpe"
      "rate.ConditionGroup.E_RELATION\022\r\n\005limit\030"
      "\010 \001(\r\022\022\n\nlimit_from\030\t \001(\r\022\022\n\nmod_factor\030"
      "\n \001(\r\032\371\001\n\tCondition\022;\n\010relation\030\001 \001(\0162)."
      "neb.Mydis.DbOperate.Condition.E_RELATION"
      "\022!\n\010col_type\030\002 \001(\0162\017.neb.E_COL_TYPE\022\020\n\010c"
      "ol_name\030\003 \001(\t\022\022\n\ncol_values\030\004 \003(\014\022\026\n\016col"
      "_name_right\030\005 \001(\t\"N\n\nE_RELATION\022\006\n\002EQ\020\000\022"
      "\006\n\002NE\020\001\022\006\n\002GT\020\002\022\006\n\002LT\020\003\022\006\n\002GE\020\004\022\006\n\002LE\020\005\022"
      "\010\n\004LIKE\020\006\022\006\n\002IN\020\007\032\244\001\n\016ConditionGroup\022@\n\010"
      "relation\030\001 \001(\0162..neb.Mydis.DbOperate.Con"
      "ditionGroup.E_RELATION\0221\n\tcondition\030\002 \003("
      "\0132\036.neb.Mydis.DbOperate.Condition\"\035\n\nE_R"
      "ELATION\022\007\n\003AND\020\000\022\006\n\002OR\020\001\032w\n\007OrderBy\0229\n\010r"
      "elation\030\001 \001(\0162\'.neb.Mydis.DbOperate.Orde"
      "rBy.E_RELATION\022\020\n\010col_name\030\002 \001(\t\"\037\n\nE_RE"
      "LATION\022\007\n\003ASC\020\000\022\010\n\004DESC\020\001\"^\n\014E_QUERY_TYP"
      "E\022\n\n\006SELECT\020\000\022\n\n\006INSERT\020\001\022\021\n\rINSERT_IGNO"
      "RE\020\002\022\n\n\006UPDATE\020\003\022\013\n\007REPLACE\020\004\022\n\n\006DELETE\020"
      "\005\"(\n\006Record\022\036\n\nfield_info\030\001 \003(\0132\n.neb.Fi"
      "eld\"_\n\005Field\022\020\n\010col_name\030\001 \001(\t\022!\n\010col_ty"
      "pe\030\002 \001(\0162\017.neb.E_COL_TYPE\022\021\n\tcol_value\030\003"
      " \001(\014\022\016\n\006col_as\030\004 \001(\t\"\262\002\n\006Result\022\016\n\006err_n"
      "o\030\001 \001(\005\022\017\n\007err_msg\030\002 \001(\014\022\023\n\013total_count\030"
      "\003 \001(\005\022\025\n\rcurrent_count\030\004 \001(\005\022 \n\013record_d"
      "ata\030\005 \003(\0132\013.neb.Record\022\014\n\004from\030\006 \001(\005\022&\n\006"
      "locate\030\007 \001(\0132\026.neb.Result.DataLocate\032U\n\n"
      "DataLocate\022\024\n\014section_from\030\001 \001(\r\022\022\n\nsect"
      "ion_to\030\002 \001(\r\022\014\n\004hash\030\003 \001(\r\022\017\n\007divisor\030\004 "
      "\001(\r\",\n\rE_RESULT_FROM\022\013\n\007FROM_DB\020\000\022\016\n\nFRO"
      "M_REDIS\020\001*D\n\nE_COL_TYPE\022\n\n\006STRING\020\000\022\007\n\003I"
      "NT\020\001\022\n\n\006BIGINT\020\002\022\t\n\005FLOAT\020\003\022\n\n\006DOUBLE\020\004b"
      "\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1967);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mydis.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_mydis_2eproto
namespace neb {
const ::google::protobuf::EnumDescriptor* Mydis_RedisOperate_OPERATE_TYPE_descriptor() {
  protobuf_mydis_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mydis_2eproto::file_level_enum_descriptors[0];
}
bool Mydis_RedisOperate_OPERATE_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Mydis_RedisOperate_OPERATE_TYPE Mydis_RedisOperate::T_READ;
const Mydis_RedisOperate_OPERATE_TYPE Mydis_RedisOperate::T_WRITE;
const Mydis_RedisOperate_OPERATE_TYPE Mydis_RedisOperate::OPERATE_TYPE_MIN;
const Mydis_RedisOperate_OPERATE_TYPE Mydis_RedisOperate::OPERATE_TYPE_MAX;
const int Mydis_RedisOperate::OPERATE_TYPE_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Mydis_DbOperate_Condition_E_RELATION_descriptor() {
  protobuf_mydis_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mydis_2eproto::file_level_enum_descriptors[1];
}
bool Mydis_DbOperate_Condition_E_RELATION_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Mydis_DbOperate_Condition_E_RELATION Mydis_DbOperate_Condition::EQ;
const Mydis_DbOperate_Condition_E_RELATION Mydis_DbOperate_Condition::NE;
const Mydis_DbOperate_Condition_E_RELATION Mydis_DbOperate_Condition::GT;
const Mydis_DbOperate_Condition_E_RELATION Mydis_DbOperate_Condition::LT;
const Mydis_DbOperate_Condition_E_RELATION Mydis_DbOperate_Condition::GE;
const Mydis_DbOperate_Condition_E_RELATION Mydis_DbOperate_Condition::LE;
const Mydis_DbOperate_Condition_E_RELATION Mydis_DbOperate_Condition::LIKE;
const Mydis_DbOperate_Condition_E_RELATION Mydis_DbOperate_Condition::IN;
const Mydis_DbOperate_Condition_E_RELATION Mydis_DbOperate_Condition::E_RELATION_MIN;
const Mydis_DbOperate_Condition_E_RELATION Mydis_DbOperate_Condition::E_RELATION_MAX;
const int Mydis_DbOperate_Condition::E_RELATION_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Mydis_DbOperate_ConditionGroup_E_RELATION_descriptor() {
  protobuf_mydis_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mydis_2eproto::file_level_enum_descriptors[2];
}
bool Mydis_DbOperate_ConditionGroup_E_RELATION_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Mydis_DbOperate_ConditionGroup_E_RELATION Mydis_DbOperate_ConditionGroup::AND;
const Mydis_DbOperate_ConditionGroup_E_RELATION Mydis_DbOperate_ConditionGroup::OR;
const Mydis_DbOperate_ConditionGroup_E_RELATION Mydis_DbOperate_ConditionGroup::E_RELATION_MIN;
const Mydis_DbOperate_ConditionGroup_E_RELATION Mydis_DbOperate_ConditionGroup::E_RELATION_MAX;
const int Mydis_DbOperate_ConditionGroup::E_RELATION_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Mydis_DbOperate_OrderBy_E_RELATION_descriptor() {
  protobuf_mydis_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mydis_2eproto::file_level_enum_descriptors[3];
}
bool Mydis_DbOperate_OrderBy_E_RELATION_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Mydis_DbOperate_OrderBy_E_RELATION Mydis_DbOperate_OrderBy::ASC;
const Mydis_DbOperate_OrderBy_E_RELATION Mydis_DbOperate_OrderBy::DESC;
const Mydis_DbOperate_OrderBy_E_RELATION Mydis_DbOperate_OrderBy::E_RELATION_MIN;
const Mydis_DbOperate_OrderBy_E_RELATION Mydis_DbOperate_OrderBy::E_RELATION_MAX;
const int Mydis_DbOperate_OrderBy::E_RELATION_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Mydis_DbOperate_E_QUERY_TYPE_descriptor() {
  protobuf_mydis_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mydis_2eproto::file_level_enum_descriptors[4];
}
bool Mydis_DbOperate_E_QUERY_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Mydis_DbOperate_E_QUERY_TYPE Mydis_DbOperate::SELECT;
const Mydis_DbOperate_E_QUERY_TYPE Mydis_DbOperate::INSERT;
const Mydis_DbOperate_E_QUERY_TYPE Mydis_DbOperate::INSERT_IGNORE;
const Mydis_DbOperate_E_QUERY_TYPE Mydis_DbOperate::UPDATE;
const Mydis_DbOperate_E_QUERY_TYPE Mydis_DbOperate::REPLACE;
const Mydis_DbOperate_E_QUERY_TYPE Mydis_DbOperate::DELETE;
const Mydis_DbOperate_E_QUERY_TYPE Mydis_DbOperate::E_QUERY_TYPE_MIN;
const Mydis_DbOperate_E_QUERY_TYPE Mydis_DbOperate::E_QUERY_TYPE_MAX;
const int Mydis_DbOperate::E_QUERY_TYPE_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Result_E_RESULT_FROM_descriptor() {
  protobuf_mydis_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mydis_2eproto::file_level_enum_descriptors[5];
}
bool Result_E_RESULT_FROM_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Result_E_RESULT_FROM Result::FROM_DB;
const Result_E_RESULT_FROM Result::FROM_REDIS;
const Result_E_RESULT_FROM Result::E_RESULT_FROM_MIN;
const Result_E_RESULT_FROM Result::E_RESULT_FROM_MAX;
const int Result::E_RESULT_FROM_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* E_COL_TYPE_descriptor() {
  protobuf_mydis_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mydis_2eproto::file_level_enum_descriptors[6];
}
bool E_COL_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Mydis_RedisOperate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Mydis_RedisOperate::kKeyNameFieldNumber;
const int Mydis_RedisOperate::kRedisCmdReadFieldNumber;
const int Mydis_RedisOperate::kRedisCmdWriteFieldNumber;
const int Mydis_RedisOperate::kOpTypeFieldNumber;
const int Mydis_RedisOperate::kFieldsFieldNumber;
const int Mydis_RedisOperate::kKeyTtlFieldNumber;
const int Mydis_RedisOperate::kRedisStructureFieldNumber;
const int Mydis_RedisOperate::kDataPurposeFieldNumber;
const int Mydis_RedisOperate::kHashKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Mydis_RedisOperate::Mydis_RedisOperate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mydis_2eproto::scc_info_Mydis_RedisOperate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:neb.Mydis.RedisOperate)
}
Mydis_RedisOperate::Mydis_RedisOperate(const Mydis_RedisOperate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fields_(from.fields_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key_name().size() > 0) {
    key_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_name_);
  }
  redis_cmd_read_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.redis_cmd_read().size() > 0) {
    redis_cmd_read_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redis_cmd_read_);
  }
  redis_cmd_write_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.redis_cmd_write().size() > 0) {
    redis_cmd_write_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redis_cmd_write_);
  }
  hash_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash_key().size() > 0) {
    hash_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_key_);
  }
  ::memcpy(&op_type_, &from.op_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&data_purpose_) -
    reinterpret_cast<char*>(&op_type_)) + sizeof(data_purpose_));
  // @@protoc_insertion_point(copy_constructor:neb.Mydis.RedisOperate)
}

void Mydis_RedisOperate::SharedCtor() {
  key_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redis_cmd_read_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redis_cmd_write_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&op_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_purpose_) -
      reinterpret_cast<char*>(&op_type_)) + sizeof(data_purpose_));
}

Mydis_RedisOperate::~Mydis_RedisOperate() {
  // @@protoc_insertion_point(destructor:neb.Mydis.RedisOperate)
  SharedDtor();
}

void Mydis_RedisOperate::SharedDtor() {
  key_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redis_cmd_read_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redis_cmd_write_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Mydis_RedisOperate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Mydis_RedisOperate::descriptor() {
  ::protobuf_mydis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mydis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Mydis_RedisOperate& Mydis_RedisOperate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mydis_2eproto::scc_info_Mydis_RedisOperate.base);
  return *internal_default_instance();
}


void Mydis_RedisOperate::Clear() {
// @@protoc_insertion_point(message_clear_start:neb.Mydis.RedisOperate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fields_.Clear();
  key_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redis_cmd_read_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redis_cmd_write_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&op_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_purpose_) -
      reinterpret_cast<char*>(&op_type_)) + sizeof(data_purpose_));
  _internal_metadata_.Clear();
}

bool Mydis_RedisOperate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:neb.Mydis.RedisOperate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes key_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string redis_cmd_read = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redis_cmd_read()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->redis_cmd_read().data(), static_cast<int>(this->redis_cmd_read().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "neb.Mydis.RedisOperate.redis_cmd_read"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string redis_cmd_write = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redis_cmd_write()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->redis_cmd_write().data(), static_cast<int>(this->redis_cmd_write().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "neb.Mydis.RedisOperate.redis_cmd_write"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .neb.Mydis.RedisOperate.OPERATE_TYPE op_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op_type(static_cast< ::neb::Mydis_RedisOperate_OPERATE_TYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .neb.Field fields = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 key_ttl = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &key_ttl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 redis_structure = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &redis_structure_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 data_purpose = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_purpose_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes hash_key = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_hash_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:neb.Mydis.RedisOperate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:neb.Mydis.RedisOperate)
  return false;
#undef DO_
}

void Mydis_RedisOperate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:neb.Mydis.RedisOperate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key_name = 1;
  if (this->key_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key_name(), output);
  }

  // string redis_cmd_read = 2;
  if (this->redis_cmd_read().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->redis_cmd_read().data(), static_cast<int>(this->redis_cmd_read().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "neb.Mydis.RedisOperate.redis_cmd_read");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->redis_cmd_read(), output);
  }

  // string redis_cmd_write = 3;
  if (this->redis_cmd_write().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->redis_cmd_write().data(), static_cast<int>(this->redis_cmd_write().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "neb.Mydis.RedisOperate.redis_cmd_write");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->redis_cmd_write(), output);
  }

  // .neb.Mydis.RedisOperate.OPERATE_TYPE op_type = 4;
  if (this->op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->op_type(), output);
  }

  // repeated .neb.Field fields = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->fields(static_cast<int>(i)),
      output);
  }

  // int32 key_ttl = 6;
  if (this->key_ttl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->key_ttl(), output);
  }

  // int32 redis_structure = 7;
  if (this->redis_structure() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->redis_structure(), output);
  }

  // int32 data_purpose = 8;
  if (this->data_purpose() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->data_purpose(), output);
  }

  // bytes hash_key = 9;
  if (this->hash_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->hash_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:neb.Mydis.RedisOperate)
}

::google::protobuf::uint8* Mydis_RedisOperate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:neb.Mydis.RedisOperate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key_name = 1;
  if (this->key_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key_name(), target);
  }

  // string redis_cmd_read = 2;
  if (this->redis_cmd_read().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->redis_cmd_read().data(), static_cast<int>(this->redis_cmd_read().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "neb.Mydis.RedisOperate.redis_cmd_read");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->redis_cmd_read(), target);
  }

  // string redis_cmd_write = 3;
  if (this->redis_cmd_write().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->redis_cmd_write().data(), static_cast<int>(this->redis_cmd_write().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "neb.Mydis.RedisOperate.redis_cmd_write");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->redis_cmd_write(), target);
  }

  // .neb.Mydis.RedisOperate.OPERATE_TYPE op_type = 4;
  if (this->op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->op_type(), target);
  }

  // repeated .neb.Field fields = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->fields(static_cast<int>(i)), deterministic, target);
  }

  // int32 key_ttl = 6;
  if (this->key_ttl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->key_ttl(), target);
  }

  // int32 redis_structure = 7;
  if (this->redis_structure() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->redis_structure(), target);
  }

  // int32 data_purpose = 8;
  if (this->data_purpose() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->data_purpose(), target);
  }

  // bytes hash_key = 9;
  if (this->hash_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->hash_key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:neb.Mydis.RedisOperate)
  return target;
}

size_t Mydis_RedisOperate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:neb.Mydis.RedisOperate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .neb.Field fields = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->fields_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->fields(static_cast<int>(i)));
    }
  }

  // bytes key_name = 1;
  if (this->key_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key_name());
  }

  // string redis_cmd_read = 2;
  if (this->redis_cmd_read().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->redis_cmd_read());
  }

  // string redis_cmd_write = 3;
  if (this->redis_cmd_write().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->redis_cmd_write());
  }

  // bytes hash_key = 9;
  if (this->hash_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->hash_key());
  }

  // .neb.Mydis.RedisOperate.OPERATE_TYPE op_type = 4;
  if (this->op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());
  }

  // int32 key_ttl = 6;
  if (this->key_ttl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->key_ttl());
  }

  // int32 redis_structure = 7;
  if (this->redis_structure() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->redis_structure());
  }

  // int32 data_purpose = 8;
  if (this->data_purpose() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->data_purpose());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Mydis_RedisOperate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:neb.Mydis.RedisOperate)
  GOOGLE_DCHECK_NE(&from, this);
  const Mydis_RedisOperate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Mydis_RedisOperate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:neb.Mydis.RedisOperate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:neb.Mydis.RedisOperate)
    MergeFrom(*source);
  }
}

void Mydis_RedisOperate::MergeFrom(const Mydis_RedisOperate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:neb.Mydis.RedisOperate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fields_.MergeFrom(from.fields_);
  if (from.key_name().size() > 0) {

    key_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_name_);
  }
  if (from.redis_cmd_read().size() > 0) {

    redis_cmd_read_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redis_cmd_read_);
  }
  if (from.redis_cmd_write().size() > 0) {

    redis_cmd_write_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redis_cmd_write_);
  }
  if (from.hash_key().size() > 0) {

    hash_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_key_);
  }
  if (from.op_type() != 0) {
    set_op_type(from.op_type());
  }
  if (from.key_ttl() != 0) {
    set_key_ttl(from.key_ttl());
  }
  if (from.redis_structure() != 0) {
    set_redis_structure(from.redis_structure());
  }
  if (from.data_purpose() != 0) {
    set_data_purpose(from.data_purpose());
  }
}

void Mydis_RedisOperate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:neb.Mydis.RedisOperate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mydis_RedisOperate::CopyFrom(const Mydis_RedisOperate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:neb.Mydis.RedisOperate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mydis_RedisOperate::IsInitialized() const {
  return true;
}

void Mydis_RedisOperate::Swap(Mydis_RedisOperate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Mydis_RedisOperate::InternalSwap(Mydis_RedisOperate* other) {
  using std::swap;
  CastToBase(&fields_)->InternalSwap(CastToBase(&other->fields_));
  key_name_.Swap(&other->key_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  redis_cmd_read_.Swap(&other->redis_cmd_read_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  redis_cmd_write_.Swap(&other->redis_cmd_write_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  hash_key_.Swap(&other->hash_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(op_type_, other->op_type_);
  swap(key_ttl_, other->key_ttl_);
  swap(redis_structure_, other->redis_structure_);
  swap(data_purpose_, other->data_purpose_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Mydis_RedisOperate::GetMetadata() const {
  protobuf_mydis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mydis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Mydis_DbOperate_Condition::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Mydis_DbOperate_Condition::kRelationFieldNumber;
const int Mydis_DbOperate_Condition::kColTypeFieldNumber;
const int Mydis_DbOperate_Condition::kColNameFieldNumber;
const int Mydis_DbOperate_Condition::kColValuesFieldNumber;
const int Mydis_DbOperate_Condition::kColNameRightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Mydis_DbOperate_Condition::Mydis_DbOperate_Condition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mydis_2eproto::scc_info_Mydis_DbOperate_Condition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:neb.Mydis.DbOperate.Condition)
}
Mydis_DbOperate_Condition::Mydis_DbOperate_Condition(const Mydis_DbOperate_Condition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      col_values_(from.col_values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  col_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.col_name().size() > 0) {
    col_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_name_);
  }
  col_name_right_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.col_name_right().size() > 0) {
    col_name_right_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_name_right_);
  }
  ::memcpy(&relation_, &from.relation_,
    static_cast<size_t>(reinterpret_cast<char*>(&col_type_) -
    reinterpret_cast<char*>(&relation_)) + sizeof(col_type_));
  // @@protoc_insertion_point(copy_constructor:neb.Mydis.DbOperate.Condition)
}

void Mydis_DbOperate_Condition::SharedCtor() {
  col_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_name_right_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&relation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&col_type_) -
      reinterpret_cast<char*>(&relation_)) + sizeof(col_type_));
}

Mydis_DbOperate_Condition::~Mydis_DbOperate_Condition() {
  // @@protoc_insertion_point(destructor:neb.Mydis.DbOperate.Condition)
  SharedDtor();
}

void Mydis_DbOperate_Condition::SharedDtor() {
  col_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_name_right_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Mydis_DbOperate_Condition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Mydis_DbOperate_Condition::descriptor() {
  ::protobuf_mydis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mydis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Mydis_DbOperate_Condition& Mydis_DbOperate_Condition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mydis_2eproto::scc_info_Mydis_DbOperate_Condition.base);
  return *internal_default_instance();
}


void Mydis_DbOperate_Condition::Clear() {
// @@protoc_insertion_point(message_clear_start:neb.Mydis.DbOperate.Condition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  col_values_.Clear();
  col_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_name_right_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&relation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&col_type_) -
      reinterpret_cast<char*>(&relation_)) + sizeof(col_type_));
  _internal_metadata_.Clear();
}

bool Mydis_DbOperate_Condition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:neb.Mydis.DbOperate.Condition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .neb.Mydis.DbOperate.Condition.E_RELATION relation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_relation(static_cast< ::neb::Mydis_DbOperate_Condition_E_RELATION >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .neb.E_COL_TYPE col_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_col_type(static_cast< ::neb::E_COL_TYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string col_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_col_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->col_name().data(), static_cast<int>(this->col_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "neb.Mydis.DbOperate.Condition.col_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes col_values = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_col_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string col_name_right = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_col_name_right()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->col_name_right().data(), static_cast<int>(this->col_name_right().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "neb.Mydis.DbOperate.Condition.col_name_right"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:neb.Mydis.DbOperate.Condition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:neb.Mydis.DbOperate.Condition)
  return false;
#undef DO_
}

void Mydis_DbOperate_Condition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:neb.Mydis.DbOperate.Condition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .neb.Mydis.DbOperate.Condition.E_RELATION relation = 1;
  if (this->relation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->relation(), output);
  }

  // .neb.E_COL_TYPE col_type = 2;
  if (this->col_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->col_type(), output);
  }

  // string col_name = 3;
  if (this->col_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col_name().data(), static_cast<int>(this->col_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "neb.Mydis.DbOperate.Condition.col_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->col_name(), output);
  }

  // repeated bytes col_values = 4;
  for (int i = 0, n = this->col_values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      4, this->col_values(i), output);
  }

  // string col_name_right = 5;
  if (this->col_name_right().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col_name_right().data(), static_cast<int>(this->col_name_right().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "neb.Mydis.DbOperate.Condition.col_name_right");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->col_name_right(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:neb.Mydis.DbOperate.Condition)
}

::google::protobuf::uint8* Mydis_DbOperate_Condition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:neb.Mydis.DbOperate.Condition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .neb.Mydis.DbOperate.Condition.E_RELATION relation = 1;
  if (this->relation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->relation(), target);
  }

  // .neb.E_COL_TYPE col_type = 2;
  if (this->col_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->col_type(), target);
  }

  // string col_name = 3;
  if (this->col_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col_name().data(), static_cast<int>(this->col_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "neb.Mydis.DbOperate.Condition.col_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->col_name(), target);
  }

  // repeated bytes col_values = 4;
  for (int i = 0, n = this->col_values_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(4, this->col_values(i), target);
  }

  // string col_name_right = 5;
  if (this->col_name_right().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col_name_right().data(), static_cast<int>(this->col_name_right().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "neb.Mydis.DbOperate.Condition.col_name_right");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->col_name_right(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:neb.Mydis.DbOperate.Condition)
  return target;
}

size_t Mydis_DbOperate_Condition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:neb.Mydis.DbOperate.Condition)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes col_values = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->col_values_size());
  for (int i = 0, n = this->col_values_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->col_values(i));
  }

  // string col_name = 3;
  if (this->col_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->col_name());
  }

  // string col_name_right = 5;
  if (this->col_name_right().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->col_name_right());
  }

  // .neb.Mydis.DbOperate.Condition.E_RELATION relation = 1;
  if (this->relation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->relation());
  }

  // .neb.E_COL_TYPE col_type = 2;
  if (this->col_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->col_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Mydis_DbOperate_Condition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:neb.Mydis.DbOperate.Condition)
  GOOGLE_DCHECK_NE(&from, this);
  const Mydis_DbOperate_Condition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Mydis_DbOperate_Condition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:neb.Mydis.DbOperate.Condition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:neb.Mydis.DbOperate.Condition)
    MergeFrom(*source);
  }
}

void Mydis_DbOperate_Condition::MergeFrom(const Mydis_DbOperate_Condition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:neb.Mydis.DbOperate.Condition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  col_values_.MergeFrom(from.col_values_);
  if (from.col_name().size() > 0) {

    col_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_name_);
  }
  if (from.col_name_right().size() > 0) {

    col_name_right_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_name_right_);
  }
  if (from.relation() != 0) {
    set_relation(from.relation());
  }
  if (from.col_type() != 0) {
    set_col_type(from.col_type());
  }
}

void Mydis_DbOperate_Condition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:neb.Mydis.DbOperate.Condition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mydis_DbOperate_Condition::CopyFrom(const Mydis_DbOperate_Condition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:neb.Mydis.DbOperate.Condition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mydis_DbOperate_Condition::IsInitialized() const {
  return true;
}

void Mydis_DbOperate_Condition::Swap(Mydis_DbOperate_Condition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Mydis_DbOperate_Condition::InternalSwap(Mydis_DbOperate_Condition* other) {
  using std::swap;
  col_values_.InternalSwap(CastToBase(&other->col_values_));
  col_name_.Swap(&other->col_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  col_name_right_.Swap(&other->col_name_right_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(relation_, other->relation_);
  swap(col_type_, other->col_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Mydis_DbOperate_Condition::GetMetadata() const {
  protobuf_mydis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mydis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Mydis_DbOperate_ConditionGroup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Mydis_DbOperate_ConditionGroup::kRelationFieldNumber;
const int Mydis_DbOperate_ConditionGroup::kConditionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Mydis_DbOperate_ConditionGroup::Mydis_DbOperate_ConditionGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mydis_2eproto::scc_info_Mydis_DbOperate_ConditionGroup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:neb.Mydis.DbOperate.ConditionGroup)
}
Mydis_DbOperate_ConditionGroup::Mydis_DbOperate_ConditionGroup(const Mydis_DbOperate_ConditionGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      condition_(from.condition_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  relation_ = from.relation_;
  // @@protoc_insertion_point(copy_constructor:neb.Mydis.DbOperate.ConditionGroup)
}

void Mydis_DbOperate_ConditionGroup::SharedCtor() {
  relation_ = 0;
}

Mydis_DbOperate_ConditionGroup::~Mydis_DbOperate_ConditionGroup() {
  // @@protoc_insertion_point(destructor:neb.Mydis.DbOperate.ConditionGroup)
  SharedDtor();
}

void Mydis_DbOperate_ConditionGroup::SharedDtor() {
}

void Mydis_DbOperate_ConditionGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Mydis_DbOperate_ConditionGroup::descriptor() {
  ::protobuf_mydis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mydis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Mydis_DbOperate_ConditionGroup& Mydis_DbOperate_ConditionGroup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mydis_2eproto::scc_info_Mydis_DbOperate_ConditionGroup.base);
  return *internal_default_instance();
}


void Mydis_DbOperate_ConditionGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:neb.Mydis.DbOperate.ConditionGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  condition_.Clear();
  relation_ = 0;
  _internal_metadata_.Clear();
}

bool Mydis_DbOperate_ConditionGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:neb.Mydis.DbOperate.ConditionGroup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .neb.Mydis.DbOperate.ConditionGroup.E_RELATION relation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_relation(static_cast< ::neb::Mydis_DbOperate_ConditionGroup_E_RELATION >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .neb.Mydis.DbOperate.Condition condition = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_condition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:neb.Mydis.DbOperate.ConditionGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:neb.Mydis.DbOperate.ConditionGroup)
  return false;
#undef DO_
}

void Mydis_DbOperate_ConditionGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:neb.Mydis.DbOperate.ConditionGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .neb.Mydis.DbOperate.ConditionGroup.E_RELATION relation = 1;
  if (this->relation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->relation(), output);
  }

  // repeated .neb.Mydis.DbOperate.Condition condition = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->condition_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->condition(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:neb.Mydis.DbOperate.ConditionGroup)
}

::google::protobuf::uint8* Mydis_DbOperate_ConditionGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:neb.Mydis.DbOperate.ConditionGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .neb.Mydis.DbOperate.ConditionGroup.E_RELATION relation = 1;
  if (this->relation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->relation(), target);
  }

  // repeated .neb.Mydis.DbOperate.Condition condition = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->condition_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->condition(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:neb.Mydis.DbOperate.ConditionGroup)
  return target;
}

size_t Mydis_DbOperate_ConditionGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:neb.Mydis.DbOperate.ConditionGroup)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .neb.Mydis.DbOperate.Condition condition = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->condition_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->condition(static_cast<int>(i)));
    }
  }

  // .neb.Mydis.DbOperate.ConditionGroup.E_RELATION relation = 1;
  if (this->relation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->relation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Mydis_DbOperate_ConditionGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:neb.Mydis.DbOperate.ConditionGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const Mydis_DbOperate_ConditionGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Mydis_DbOperate_ConditionGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:neb.Mydis.DbOperate.ConditionGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:neb.Mydis.DbOperate.ConditionGroup)
    MergeFrom(*source);
  }
}

void Mydis_DbOperate_ConditionGroup::MergeFrom(const Mydis_DbOperate_ConditionGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:neb.Mydis.DbOperate.ConditionGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  condition_.MergeFrom(from.condition_);
  if (from.relation() != 0) {
    set_relation(from.relation());
  }
}

void Mydis_DbOperate_ConditionGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:neb.Mydis.DbOperate.ConditionGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mydis_DbOperate_ConditionGroup::CopyFrom(const Mydis_DbOperate_ConditionGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:neb.Mydis.DbOperate.ConditionGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mydis_DbOperate_ConditionGroup::IsInitialized() const {
  return true;
}

void Mydis_DbOperate_ConditionGroup::Swap(Mydis_DbOperate_ConditionGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Mydis_DbOperate_ConditionGroup::InternalSwap(Mydis_DbOperate_ConditionGroup* other) {
  using std::swap;
  CastToBase(&condition_)->InternalSwap(CastToBase(&other->condition_));
  swap(relation_, other->relation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Mydis_DbOperate_ConditionGroup::GetMetadata() const {
  protobuf_mydis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mydis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Mydis_DbOperate_OrderBy::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Mydis_DbOperate_OrderBy::kRelationFieldNumber;
const int Mydis_DbOperate_OrderBy::kColNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Mydis_DbOperate_OrderBy::Mydis_DbOperate_OrderBy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mydis_2eproto::scc_info_Mydis_DbOperate_OrderBy.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:neb.Mydis.DbOperate.OrderBy)
}
Mydis_DbOperate_OrderBy::Mydis_DbOperate_OrderBy(const Mydis_DbOperate_OrderBy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  col_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.col_name().size() > 0) {
    col_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_name_);
  }
  relation_ = from.relation_;
  // @@protoc_insertion_point(copy_constructor:neb.Mydis.DbOperate.OrderBy)
}

void Mydis_DbOperate_OrderBy::SharedCtor() {
  col_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  relation_ = 0;
}

Mydis_DbOperate_OrderBy::~Mydis_DbOperate_OrderBy() {
  // @@protoc_insertion_point(destructor:neb.Mydis.DbOperate.OrderBy)
  SharedDtor();
}

void Mydis_DbOperate_OrderBy::SharedDtor() {
  col_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Mydis_DbOperate_OrderBy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Mydis_DbOperate_OrderBy::descriptor() {
  ::protobuf_mydis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mydis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Mydis_DbOperate_OrderBy& Mydis_DbOperate_OrderBy::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mydis_2eproto::scc_info_Mydis_DbOperate_OrderBy.base);
  return *internal_default_instance();
}


void Mydis_DbOperate_OrderBy::Clear() {
// @@protoc_insertion_point(message_clear_start:neb.Mydis.DbOperate.OrderBy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  col_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  relation_ = 0;
  _internal_metadata_.Clear();
}

bool Mydis_DbOperate_OrderBy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:neb.Mydis.DbOperate.OrderBy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .neb.Mydis.DbOperate.OrderBy.E_RELATION relation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_relation(static_cast< ::neb::Mydis_DbOperate_OrderBy_E_RELATION >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string col_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_col_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->col_name().data(), static_cast<int>(this->col_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "neb.Mydis.DbOperate.OrderBy.col_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:neb.Mydis.DbOperate.OrderBy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:neb.Mydis.DbOperate.OrderBy)
  return false;
#undef DO_
}

void Mydis_DbOperate_OrderBy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:neb.Mydis.DbOperate.OrderBy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .neb.Mydis.DbOperate.OrderBy.E_RELATION relation = 1;
  if (this->relation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->relation(), output);
  }

  // string col_name = 2;
  if (this->col_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col_name().data(), static_cast<int>(this->col_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "neb.Mydis.DbOperate.OrderBy.col_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->col_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:neb.Mydis.DbOperate.OrderBy)
}

::google::protobuf::uint8* Mydis_DbOperate_OrderBy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:neb.Mydis.DbOperate.OrderBy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .neb.Mydis.DbOperate.OrderBy.E_RELATION relation = 1;
  if (this->relation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->relation(), target);
  }

  // string col_name = 2;
  if (this->col_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col_name().data(), static_cast<int>(this->col_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "neb.Mydis.DbOperate.OrderBy.col_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->col_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:neb.Mydis.DbOperate.OrderBy)
  return target;
}

size_t Mydis_DbOperate_OrderBy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:neb.Mydis.DbOperate.OrderBy)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string col_name = 2;
  if (this->col_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->col_name());
  }

  // .neb.Mydis.DbOperate.OrderBy.E_RELATION relation = 1;
  if (this->relation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->relation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Mydis_DbOperate_OrderBy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:neb.Mydis.DbOperate.OrderBy)
  GOOGLE_DCHECK_NE(&from, this);
  const Mydis_DbOperate_OrderBy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Mydis_DbOperate_OrderBy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:neb.Mydis.DbOperate.OrderBy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:neb.Mydis.DbOperate.OrderBy)
    MergeFrom(*source);
  }
}

void Mydis_DbOperate_OrderBy::MergeFrom(const Mydis_DbOperate_OrderBy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:neb.Mydis.DbOperate.OrderBy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.col_name().size() > 0) {

    col_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_name_);
  }
  if (from.relation() != 0) {
    set_relation(from.relation());
  }
}

void Mydis_DbOperate_OrderBy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:neb.Mydis.DbOperate.OrderBy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mydis_DbOperate_OrderBy::CopyFrom(const Mydis_DbOperate_OrderBy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:neb.Mydis.DbOperate.OrderBy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mydis_DbOperate_OrderBy::IsInitialized() const {
  return true;
}

void Mydis_DbOperate_OrderBy::Swap(Mydis_DbOperate_OrderBy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Mydis_DbOperate_OrderBy::InternalSwap(Mydis_DbOperate_OrderBy* other) {
  using std::swap;
  col_name_.Swap(&other->col_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(relation_, other->relation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Mydis_DbOperate_OrderBy::GetMetadata() const {
  protobuf_mydis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mydis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Mydis_DbOperate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Mydis_DbOperate::kQueryTypeFieldNumber;
const int Mydis_DbOperate::kTableNameFieldNumber;
const int Mydis_DbOperate::kFieldsFieldNumber;
const int Mydis_DbOperate::kConditionsFieldNumber;
const int Mydis_DbOperate::kGroupbyColFieldNumber;
const int Mydis_DbOperate::kOrderbyColFieldNumber;
const int Mydis_DbOperate::kGroupRelationFieldNumber;
const int Mydis_DbOperate::kLimitFieldNumber;
const int Mydis_DbOperate::kLimitFromFieldNumber;
const int Mydis_DbOperate::kModFactorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Mydis_DbOperate::Mydis_DbOperate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mydis_2eproto::scc_info_Mydis_DbOperate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:neb.Mydis.DbOperate)
}
Mydis_DbOperate::Mydis_DbOperate(const Mydis_DbOperate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fields_(from.fields_),
      conditions_(from.conditions_),
      groupby_col_(from.groupby_col_),
      orderby_col_(from.orderby_col_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table_name().size() > 0) {
    table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_name_);
  }
  ::memcpy(&query_type_, &from.query_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&mod_factor_) -
    reinterpret_cast<char*>(&query_type_)) + sizeof(mod_factor_));
  // @@protoc_insertion_point(copy_constructor:neb.Mydis.DbOperate)
}

void Mydis_DbOperate::SharedCtor() {
  table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&query_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mod_factor_) -
      reinterpret_cast<char*>(&query_type_)) + sizeof(mod_factor_));
}

Mydis_DbOperate::~Mydis_DbOperate() {
  // @@protoc_insertion_point(destructor:neb.Mydis.DbOperate)
  SharedDtor();
}

void Mydis_DbOperate::SharedDtor() {
  table_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Mydis_DbOperate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Mydis_DbOperate::descriptor() {
  ::protobuf_mydis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mydis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Mydis_DbOperate& Mydis_DbOperate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mydis_2eproto::scc_info_Mydis_DbOperate.base);
  return *internal_default_instance();
}


void Mydis_DbOperate::Clear() {
// @@protoc_insertion_point(message_clear_start:neb.Mydis.DbOperate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fields_.Clear();
  conditions_.Clear();
  groupby_col_.Clear();
  orderby_col_.Clear();
  table_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&query_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mod_factor_) -
      reinterpret_cast<char*>(&query_type_)) + sizeof(mod_factor_));
  _internal_metadata_.Clear();
}

bool Mydis_DbOperate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:neb.Mydis.DbOperate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .neb.Mydis.DbOperate.E_QUERY_TYPE query_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_query_type(static_cast< ::neb::Mydis_DbOperate_E_QUERY_TYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string table_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->table_name().data(), static_cast<int>(this->table_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "neb.Mydis.DbOperate.table_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .neb.Field fields = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .neb.Mydis.DbOperate.ConditionGroup conditions = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_conditions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string groupby_col = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_groupby_col()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->groupby_col(this->groupby_col_size() - 1).data(),
            static_cast<int>(this->groupby_col(this->groupby_col_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "neb.Mydis.DbOperate.groupby_col"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .neb.Mydis.DbOperate.OrderBy orderby_col = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_orderby_col()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .neb.Mydis.DbOperate.ConditionGroup.E_RELATION group_relation = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_group_relation(static_cast< ::neb::Mydis_DbOperate_ConditionGroup_E_RELATION >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 limit = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 limit_from = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limit_from_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mod_factor = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mod_factor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:neb.Mydis.DbOperate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:neb.Mydis.DbOperate)
  return false;
#undef DO_
}

void Mydis_DbOperate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:neb.Mydis.DbOperate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .neb.Mydis.DbOperate.E_QUERY_TYPE query_type = 1;
  if (this->query_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->query_type(), output);
  }

  // string table_name = 2;
  if (this->table_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_name().data(), static_cast<int>(this->table_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "neb.Mydis.DbOperate.table_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->table_name(), output);
  }

  // repeated .neb.Field fields = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->fields(static_cast<int>(i)),
      output);
  }

  // repeated .neb.Mydis.DbOperate.ConditionGroup conditions = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->conditions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->conditions(static_cast<int>(i)),
      output);
  }

  // repeated string groupby_col = 5;
  for (int i = 0, n = this->groupby_col_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->groupby_col(i).data(), static_cast<int>(this->groupby_col(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "neb.Mydis.DbOperate.groupby_col");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->groupby_col(i), output);
  }

  // repeated .neb.Mydis.DbOperate.OrderBy orderby_col = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->orderby_col_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->orderby_col(static_cast<int>(i)),
      output);
  }

  // .neb.Mydis.DbOperate.ConditionGroup.E_RELATION group_relation = 7;
  if (this->group_relation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->group_relation(), output);
  }

  // uint32 limit = 8;
  if (this->limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->limit(), output);
  }

  // uint32 limit_from = 9;
  if (this->limit_from() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->limit_from(), output);
  }

  // uint32 mod_factor = 10;
  if (this->mod_factor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->mod_factor(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:neb.Mydis.DbOperate)
}

::google::protobuf::uint8* Mydis_DbOperate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:neb.Mydis.DbOperate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .neb.Mydis.DbOperate.E_QUERY_TYPE query_type = 1;
  if (this->query_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->query_type(), target);
  }

  // string table_name = 2;
  if (this->table_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_name().data(), static_cast<int>(this->table_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "neb.Mydis.DbOperate.table_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->table_name(), target);
  }

  // repeated .neb.Field fields = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->fields(static_cast<int>(i)), deterministic, target);
  }

  // repeated .neb.Mydis.DbOperate.ConditionGroup conditions = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->conditions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->conditions(static_cast<int>(i)), deterministic, target);
  }

  // repeated string groupby_col = 5;
  for (int i = 0, n = this->groupby_col_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->groupby_col(i).data(), static_cast<int>(this->groupby_col(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "neb.Mydis.DbOperate.groupby_col");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->groupby_col(i), target);
  }

  // repeated .neb.Mydis.DbOperate.OrderBy orderby_col = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->orderby_col_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->orderby_col(static_cast<int>(i)), deterministic, target);
  }

  // .neb.Mydis.DbOperate.ConditionGroup.E_RELATION group_relation = 7;
  if (this->group_relation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->group_relation(), target);
  }

  // uint32 limit = 8;
  if (this->limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->limit(), target);
  }

  // uint32 limit_from = 9;
  if (this->limit_from() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->limit_from(), target);
  }

  // uint32 mod_factor = 10;
  if (this->mod_factor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->mod_factor(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:neb.Mydis.DbOperate)
  return target;
}

size_t Mydis_DbOperate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:neb.Mydis.DbOperate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .neb.Field fields = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->fields_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->fields(static_cast<int>(i)));
    }
  }

  // repeated .neb.Mydis.DbOperate.ConditionGroup conditions = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->conditions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->conditions(static_cast<int>(i)));
    }
  }

  // repeated string groupby_col = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->groupby_col_size());
  for (int i = 0, n = this->groupby_col_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->groupby_col(i));
  }

  // repeated .neb.Mydis.DbOperate.OrderBy orderby_col = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->orderby_col_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->orderby_col(static_cast<int>(i)));
    }
  }

  // string table_name = 2;
  if (this->table_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table_name());
  }

  // .neb.Mydis.DbOperate.E_QUERY_TYPE query_type = 1;
  if (this->query_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->query_type());
  }

  // .neb.Mydis.DbOperate.ConditionGroup.E_RELATION group_relation = 7;
  if (this->group_relation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->group_relation());
  }

  // uint32 limit = 8;
  if (this->limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->limit());
  }

  // uint32 limit_from = 9;
  if (this->limit_from() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->limit_from());
  }

  // uint32 mod_factor = 10;
  if (this->mod_factor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mod_factor());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Mydis_DbOperate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:neb.Mydis.DbOperate)
  GOOGLE_DCHECK_NE(&from, this);
  const Mydis_DbOperate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Mydis_DbOperate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:neb.Mydis.DbOperate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:neb.Mydis.DbOperate)
    MergeFrom(*source);
  }
}

void Mydis_DbOperate::MergeFrom(const Mydis_DbOperate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:neb.Mydis.DbOperate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fields_.MergeFrom(from.fields_);
  conditions_.MergeFrom(from.conditions_);
  groupby_col_.MergeFrom(from.groupby_col_);
  orderby_col_.MergeFrom(from.orderby_col_);
  if (from.table_name().size() > 0) {

    table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_name_);
  }
  if (from.query_type() != 0) {
    set_query_type(from.query_type());
  }
  if (from.group_relation() != 0) {
    set_group_relation(from.group_relation());
  }
  if (from.limit() != 0) {
    set_limit(from.limit());
  }
  if (from.limit_from() != 0) {
    set_limit_from(from.limit_from());
  }
  if (from.mod_factor() != 0) {
    set_mod_factor(from.mod_factor());
  }
}

void Mydis_DbOperate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:neb.Mydis.DbOperate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mydis_DbOperate::CopyFrom(const Mydis_DbOperate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:neb.Mydis.DbOperate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mydis_DbOperate::IsInitialized() const {
  return true;
}

void Mydis_DbOperate::Swap(Mydis_DbOperate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Mydis_DbOperate::InternalSwap(Mydis_DbOperate* other) {
  using std::swap;
  CastToBase(&fields_)->InternalSwap(CastToBase(&other->fields_));
  CastToBase(&conditions_)->InternalSwap(CastToBase(&other->conditions_));
  groupby_col_.InternalSwap(CastToBase(&other->groupby_col_));
  CastToBase(&orderby_col_)->InternalSwap(CastToBase(&other->orderby_col_));
  table_name_.Swap(&other->table_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(query_type_, other->query_type_);
  swap(group_relation_, other->group_relation_);
  swap(limit_, other->limit_);
  swap(limit_from_, other->limit_from_);
  swap(mod_factor_, other->mod_factor_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Mydis_DbOperate::GetMetadata() const {
  protobuf_mydis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mydis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Mydis::InitAsDefaultInstance() {
  ::neb::_Mydis_default_instance_._instance.get_mutable()->redis_operate_ = const_cast< ::neb::Mydis_RedisOperate*>(
      ::neb::Mydis_RedisOperate::internal_default_instance());
  ::neb::_Mydis_default_instance_._instance.get_mutable()->db_operate_ = const_cast< ::neb::Mydis_DbOperate*>(
      ::neb::Mydis_DbOperate::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Mydis::kSectionFactorFieldNumber;
const int Mydis::kRedisOperateFieldNumber;
const int Mydis::kDbOperateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Mydis::Mydis()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mydis_2eproto::scc_info_Mydis.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:neb.Mydis)
}
Mydis::Mydis(const Mydis& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_redis_operate()) {
    redis_operate_ = new ::neb::Mydis_RedisOperate(*from.redis_operate_);
  } else {
    redis_operate_ = NULL;
  }
  if (from.has_db_operate()) {
    db_operate_ = new ::neb::Mydis_DbOperate(*from.db_operate_);
  } else {
    db_operate_ = NULL;
  }
  section_factor_ = from.section_factor_;
  // @@protoc_insertion_point(copy_constructor:neb.Mydis)
}

void Mydis::SharedCtor() {
  ::memset(&redis_operate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&section_factor_) -
      reinterpret_cast<char*>(&redis_operate_)) + sizeof(section_factor_));
}

Mydis::~Mydis() {
  // @@protoc_insertion_point(destructor:neb.Mydis)
  SharedDtor();
}

void Mydis::SharedDtor() {
  if (this != internal_default_instance()) delete redis_operate_;
  if (this != internal_default_instance()) delete db_operate_;
}

void Mydis::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Mydis::descriptor() {
  ::protobuf_mydis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mydis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Mydis& Mydis::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mydis_2eproto::scc_info_Mydis.base);
  return *internal_default_instance();
}


void Mydis::Clear() {
// @@protoc_insertion_point(message_clear_start:neb.Mydis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && redis_operate_ != NULL) {
    delete redis_operate_;
  }
  redis_operate_ = NULL;
  if (GetArenaNoVirtual() == NULL && db_operate_ != NULL) {
    delete db_operate_;
  }
  db_operate_ = NULL;
  section_factor_ = 0u;
  _internal_metadata_.Clear();
}

bool Mydis::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:neb.Mydis)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 section_factor = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &section_factor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .neb.Mydis.RedisOperate redis_operate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_redis_operate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .neb.Mydis.DbOperate db_operate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_db_operate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:neb.Mydis)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:neb.Mydis)
  return false;
#undef DO_
}

void Mydis::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:neb.Mydis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 section_factor = 1;
  if (this->section_factor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->section_factor(), output);
  }

  // .neb.Mydis.RedisOperate redis_operate = 2;
  if (this->has_redis_operate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_redis_operate(), output);
  }

  // .neb.Mydis.DbOperate db_operate = 3;
  if (this->has_db_operate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_db_operate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:neb.Mydis)
}

::google::protobuf::uint8* Mydis::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:neb.Mydis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 section_factor = 1;
  if (this->section_factor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->section_factor(), target);
  }

  // .neb.Mydis.RedisOperate redis_operate = 2;
  if (this->has_redis_operate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_redis_operate(), deterministic, target);
  }

  // .neb.Mydis.DbOperate db_operate = 3;
  if (this->has_db_operate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_db_operate(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:neb.Mydis)
  return target;
}

size_t Mydis::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:neb.Mydis)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .neb.Mydis.RedisOperate redis_operate = 2;
  if (this->has_redis_operate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *redis_operate_);
  }

  // .neb.Mydis.DbOperate db_operate = 3;
  if (this->has_db_operate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *db_operate_);
  }

  // uint32 section_factor = 1;
  if (this->section_factor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->section_factor());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Mydis::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:neb.Mydis)
  GOOGLE_DCHECK_NE(&from, this);
  const Mydis* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Mydis>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:neb.Mydis)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:neb.Mydis)
    MergeFrom(*source);
  }
}

void Mydis::MergeFrom(const Mydis& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:neb.Mydis)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_redis_operate()) {
    mutable_redis_operate()->::neb::Mydis_RedisOperate::MergeFrom(from.redis_operate());
  }
  if (from.has_db_operate()) {
    mutable_db_operate()->::neb::Mydis_DbOperate::MergeFrom(from.db_operate());
  }
  if (from.section_factor() != 0) {
    set_section_factor(from.section_factor());
  }
}

void Mydis::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:neb.Mydis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mydis::CopyFrom(const Mydis& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:neb.Mydis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mydis::IsInitialized() const {
  return true;
}

void Mydis::Swap(Mydis* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Mydis::InternalSwap(Mydis* other) {
  using std::swap;
  swap(redis_operate_, other->redis_operate_);
  swap(db_operate_, other->db_operate_);
  swap(section_factor_, other->section_factor_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Mydis::GetMetadata() const {
  protobuf_mydis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mydis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Record::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Record::kFieldInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Record::Record()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mydis_2eproto::scc_info_Record.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:neb.Record)
}
Record::Record(const Record& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      field_info_(from.field_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:neb.Record)
}

void Record::SharedCtor() {
}

Record::~Record() {
  // @@protoc_insertion_point(destructor:neb.Record)
  SharedDtor();
}

void Record::SharedDtor() {
}

void Record::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Record::descriptor() {
  ::protobuf_mydis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mydis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Record& Record::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mydis_2eproto::scc_info_Record.base);
  return *internal_default_instance();
}


void Record::Clear() {
// @@protoc_insertion_point(message_clear_start:neb.Record)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  field_info_.Clear();
  _internal_metadata_.Clear();
}

bool Record::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:neb.Record)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .neb.Field field_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_field_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:neb.Record)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:neb.Record)
  return false;
#undef DO_
}

void Record::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:neb.Record)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .neb.Field field_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->field_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->field_info(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:neb.Record)
}

::google::protobuf::uint8* Record::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:neb.Record)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .neb.Field field_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->field_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->field_info(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:neb.Record)
  return target;
}

size_t Record::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:neb.Record)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .neb.Field field_info = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->field_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->field_info(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Record::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:neb.Record)
  GOOGLE_DCHECK_NE(&from, this);
  const Record* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Record>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:neb.Record)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:neb.Record)
    MergeFrom(*source);
  }
}

void Record::MergeFrom(const Record& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:neb.Record)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  field_info_.MergeFrom(from.field_info_);
}

void Record::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:neb.Record)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Record::CopyFrom(const Record& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:neb.Record)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Record::IsInitialized() const {
  return true;
}

void Record::Swap(Record* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Record::InternalSwap(Record* other) {
  using std::swap;
  CastToBase(&field_info_)->InternalSwap(CastToBase(&other->field_info_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Record::GetMetadata() const {
  protobuf_mydis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mydis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Field::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Field::kColNameFieldNumber;
const int Field::kColTypeFieldNumber;
const int Field::kColValueFieldNumber;
const int Field::kColAsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Field::Field()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mydis_2eproto::scc_info_Field.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:neb.Field)
}
Field::Field(const Field& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  col_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.col_name().size() > 0) {
    col_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_name_);
  }
  col_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.col_value().size() > 0) {
    col_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_value_);
  }
  col_as_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.col_as().size() > 0) {
    col_as_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_as_);
  }
  col_type_ = from.col_type_;
  // @@protoc_insertion_point(copy_constructor:neb.Field)
}

void Field::SharedCtor() {
  col_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_as_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_type_ = 0;
}

Field::~Field() {
  // @@protoc_insertion_point(destructor:neb.Field)
  SharedDtor();
}

void Field::SharedDtor() {
  col_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_as_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Field::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Field::descriptor() {
  ::protobuf_mydis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mydis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Field& Field::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mydis_2eproto::scc_info_Field.base);
  return *internal_default_instance();
}


void Field::Clear() {
// @@protoc_insertion_point(message_clear_start:neb.Field)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  col_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_as_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_type_ = 0;
  _internal_metadata_.Clear();
}

bool Field::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:neb.Field)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string col_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_col_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->col_name().data(), static_cast<int>(this->col_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "neb.Field.col_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .neb.E_COL_TYPE col_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_col_type(static_cast< ::neb::E_COL_TYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes col_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_col_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string col_as = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_col_as()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->col_as().data(), static_cast<int>(this->col_as().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "neb.Field.col_as"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:neb.Field)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:neb.Field)
  return false;
#undef DO_
}

void Field::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:neb.Field)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string col_name = 1;
  if (this->col_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col_name().data(), static_cast<int>(this->col_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "neb.Field.col_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->col_name(), output);
  }

  // .neb.E_COL_TYPE col_type = 2;
  if (this->col_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->col_type(), output);
  }

  // bytes col_value = 3;
  if (this->col_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->col_value(), output);
  }

  // string col_as = 4;
  if (this->col_as().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col_as().data(), static_cast<int>(this->col_as().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "neb.Field.col_as");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->col_as(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:neb.Field)
}

::google::protobuf::uint8* Field::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:neb.Field)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string col_name = 1;
  if (this->col_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col_name().data(), static_cast<int>(this->col_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "neb.Field.col_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->col_name(), target);
  }

  // .neb.E_COL_TYPE col_type = 2;
  if (this->col_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->col_type(), target);
  }

  // bytes col_value = 3;
  if (this->col_value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->col_value(), target);
  }

  // string col_as = 4;
  if (this->col_as().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col_as().data(), static_cast<int>(this->col_as().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "neb.Field.col_as");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->col_as(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:neb.Field)
  return target;
}

size_t Field::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:neb.Field)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string col_name = 1;
  if (this->col_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->col_name());
  }

  // bytes col_value = 3;
  if (this->col_value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->col_value());
  }

  // string col_as = 4;
  if (this->col_as().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->col_as());
  }

  // .neb.E_COL_TYPE col_type = 2;
  if (this->col_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->col_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Field::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:neb.Field)
  GOOGLE_DCHECK_NE(&from, this);
  const Field* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Field>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:neb.Field)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:neb.Field)
    MergeFrom(*source);
  }
}

void Field::MergeFrom(const Field& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:neb.Field)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.col_name().size() > 0) {

    col_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_name_);
  }
  if (from.col_value().size() > 0) {

    col_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_value_);
  }
  if (from.col_as().size() > 0) {

    col_as_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_as_);
  }
  if (from.col_type() != 0) {
    set_col_type(from.col_type());
  }
}

void Field::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:neb.Field)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Field::CopyFrom(const Field& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:neb.Field)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Field::IsInitialized() const {
  return true;
}

void Field::Swap(Field* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Field::InternalSwap(Field* other) {
  using std::swap;
  col_name_.Swap(&other->col_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  col_value_.Swap(&other->col_value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  col_as_.Swap(&other->col_as_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(col_type_, other->col_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Field::GetMetadata() const {
  protobuf_mydis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mydis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Result_DataLocate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Result_DataLocate::kSectionFromFieldNumber;
const int Result_DataLocate::kSectionToFieldNumber;
const int Result_DataLocate::kHashFieldNumber;
const int Result_DataLocate::kDivisorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Result_DataLocate::Result_DataLocate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mydis_2eproto::scc_info_Result_DataLocate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:neb.Result.DataLocate)
}
Result_DataLocate::Result_DataLocate(const Result_DataLocate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&section_from_, &from.section_from_,
    static_cast<size_t>(reinterpret_cast<char*>(&divisor_) -
    reinterpret_cast<char*>(&section_from_)) + sizeof(divisor_));
  // @@protoc_insertion_point(copy_constructor:neb.Result.DataLocate)
}

void Result_DataLocate::SharedCtor() {
  ::memset(&section_from_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&divisor_) -
      reinterpret_cast<char*>(&section_from_)) + sizeof(divisor_));
}

Result_DataLocate::~Result_DataLocate() {
  // @@protoc_insertion_point(destructor:neb.Result.DataLocate)
  SharedDtor();
}

void Result_DataLocate::SharedDtor() {
}

void Result_DataLocate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Result_DataLocate::descriptor() {
  ::protobuf_mydis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mydis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Result_DataLocate& Result_DataLocate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mydis_2eproto::scc_info_Result_DataLocate.base);
  return *internal_default_instance();
}


void Result_DataLocate::Clear() {
// @@protoc_insertion_point(message_clear_start:neb.Result.DataLocate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&section_from_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&divisor_) -
      reinterpret_cast<char*>(&section_from_)) + sizeof(divisor_));
  _internal_metadata_.Clear();
}

bool Result_DataLocate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:neb.Result.DataLocate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 section_from = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &section_from_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 section_to = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &section_to_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 hash = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 divisor = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &divisor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:neb.Result.DataLocate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:neb.Result.DataLocate)
  return false;
#undef DO_
}

void Result_DataLocate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:neb.Result.DataLocate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 section_from = 1;
  if (this->section_from() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->section_from(), output);
  }

  // uint32 section_to = 2;
  if (this->section_to() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->section_to(), output);
  }

  // uint32 hash = 3;
  if (this->hash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->hash(), output);
  }

  // uint32 divisor = 4;
  if (this->divisor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->divisor(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:neb.Result.DataLocate)
}

::google::protobuf::uint8* Result_DataLocate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:neb.Result.DataLocate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 section_from = 1;
  if (this->section_from() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->section_from(), target);
  }

  // uint32 section_to = 2;
  if (this->section_to() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->section_to(), target);
  }

  // uint32 hash = 3;
  if (this->hash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->hash(), target);
  }

  // uint32 divisor = 4;
  if (this->divisor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->divisor(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:neb.Result.DataLocate)
  return target;
}

size_t Result_DataLocate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:neb.Result.DataLocate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 section_from = 1;
  if (this->section_from() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->section_from());
  }

  // uint32 section_to = 2;
  if (this->section_to() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->section_to());
  }

  // uint32 hash = 3;
  if (this->hash() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hash());
  }

  // uint32 divisor = 4;
  if (this->divisor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->divisor());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Result_DataLocate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:neb.Result.DataLocate)
  GOOGLE_DCHECK_NE(&from, this);
  const Result_DataLocate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Result_DataLocate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:neb.Result.DataLocate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:neb.Result.DataLocate)
    MergeFrom(*source);
  }
}

void Result_DataLocate::MergeFrom(const Result_DataLocate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:neb.Result.DataLocate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.section_from() != 0) {
    set_section_from(from.section_from());
  }
  if (from.section_to() != 0) {
    set_section_to(from.section_to());
  }
  if (from.hash() != 0) {
    set_hash(from.hash());
  }
  if (from.divisor() != 0) {
    set_divisor(from.divisor());
  }
}

void Result_DataLocate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:neb.Result.DataLocate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Result_DataLocate::CopyFrom(const Result_DataLocate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:neb.Result.DataLocate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Result_DataLocate::IsInitialized() const {
  return true;
}

void Result_DataLocate::Swap(Result_DataLocate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Result_DataLocate::InternalSwap(Result_DataLocate* other) {
  using std::swap;
  swap(section_from_, other->section_from_);
  swap(section_to_, other->section_to_);
  swap(hash_, other->hash_);
  swap(divisor_, other->divisor_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Result_DataLocate::GetMetadata() const {
  protobuf_mydis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mydis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Result::InitAsDefaultInstance() {
  ::neb::_Result_default_instance_._instance.get_mutable()->locate_ = const_cast< ::neb::Result_DataLocate*>(
      ::neb::Result_DataLocate::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Result::kErrNoFieldNumber;
const int Result::kErrMsgFieldNumber;
const int Result::kTotalCountFieldNumber;
const int Result::kCurrentCountFieldNumber;
const int Result::kRecordDataFieldNumber;
const int Result::kFromFieldNumber;
const int Result::kLocateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Result::Result()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mydis_2eproto::scc_info_Result.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:neb.Result)
}
Result::Result(const Result& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      record_data_(from.record_data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  err_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.err_msg().size() > 0) {
    err_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_msg_);
  }
  if (from.has_locate()) {
    locate_ = new ::neb::Result_DataLocate(*from.locate_);
  } else {
    locate_ = NULL;
  }
  ::memcpy(&err_no_, &from.err_no_,
    static_cast<size_t>(reinterpret_cast<char*>(&from_) -
    reinterpret_cast<char*>(&err_no_)) + sizeof(from_));
  // @@protoc_insertion_point(copy_constructor:neb.Result)
}

void Result::SharedCtor() {
  err_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&locate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&from_) -
      reinterpret_cast<char*>(&locate_)) + sizeof(from_));
}

Result::~Result() {
  // @@protoc_insertion_point(destructor:neb.Result)
  SharedDtor();
}

void Result::SharedDtor() {
  err_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete locate_;
}

void Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Result::descriptor() {
  ::protobuf_mydis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mydis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Result& Result::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mydis_2eproto::scc_info_Result.base);
  return *internal_default_instance();
}


void Result::Clear() {
// @@protoc_insertion_point(message_clear_start:neb.Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  record_data_.Clear();
  err_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && locate_ != NULL) {
    delete locate_;
  }
  locate_ = NULL;
  ::memset(&err_no_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&from_) -
      reinterpret_cast<char*>(&err_no_)) + sizeof(from_));
  _internal_metadata_.Clear();
}

bool Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:neb.Result)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 err_no = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_no_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes err_msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_err_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 total_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 current_count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &current_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .neb.Record record_data = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_record_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 from = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &from_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .neb.Result.DataLocate locate = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_locate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:neb.Result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:neb.Result)
  return false;
#undef DO_
}

void Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:neb.Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 err_no = 1;
  if (this->err_no() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->err_no(), output);
  }

  // bytes err_msg = 2;
  if (this->err_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->err_msg(), output);
  }

  // int32 total_count = 3;
  if (this->total_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->total_count(), output);
  }

  // int32 current_count = 4;
  if (this->current_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->current_count(), output);
  }

  // repeated .neb.Record record_data = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->record_data(static_cast<int>(i)),
      output);
  }

  // int32 from = 6;
  if (this->from() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->from(), output);
  }

  // .neb.Result.DataLocate locate = 7;
  if (this->has_locate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_locate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:neb.Result)
}

::google::protobuf::uint8* Result::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:neb.Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 err_no = 1;
  if (this->err_no() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->err_no(), target);
  }

  // bytes err_msg = 2;
  if (this->err_msg().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->err_msg(), target);
  }

  // int32 total_count = 3;
  if (this->total_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->total_count(), target);
  }

  // int32 current_count = 4;
  if (this->current_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->current_count(), target);
  }

  // repeated .neb.Record record_data = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->record_data(static_cast<int>(i)), deterministic, target);
  }

  // int32 from = 6;
  if (this->from() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->from(), target);
  }

  // .neb.Result.DataLocate locate = 7;
  if (this->has_locate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_locate(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:neb.Result)
  return target;
}

size_t Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:neb.Result)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .neb.Record record_data = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->record_data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->record_data(static_cast<int>(i)));
    }
  }

  // bytes err_msg = 2;
  if (this->err_msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->err_msg());
  }

  // .neb.Result.DataLocate locate = 7;
  if (this->has_locate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *locate_);
  }

  // int32 err_no = 1;
  if (this->err_no() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err_no());
  }

  // int32 total_count = 3;
  if (this->total_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total_count());
  }

  // int32 current_count = 4;
  if (this->current_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->current_count());
  }

  // int32 from = 6;
  if (this->from() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->from());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Result::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:neb.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const Result* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Result>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:neb.Result)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:neb.Result)
    MergeFrom(*source);
  }
}

void Result::MergeFrom(const Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:neb.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  record_data_.MergeFrom(from.record_data_);
  if (from.err_msg().size() > 0) {

    err_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_msg_);
  }
  if (from.has_locate()) {
    mutable_locate()->::neb::Result_DataLocate::MergeFrom(from.locate());
  }
  if (from.err_no() != 0) {
    set_err_no(from.err_no());
  }
  if (from.total_count() != 0) {
    set_total_count(from.total_count());
  }
  if (from.current_count() != 0) {
    set_current_count(from.current_count());
  }
  if (from.from() != 0) {
    set_from(from.from());
  }
}

void Result::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:neb.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Result::CopyFrom(const Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:neb.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Result::IsInitialized() const {
  return true;
}

void Result::Swap(Result* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Result::InternalSwap(Result* other) {
  using std::swap;
  CastToBase(&record_data_)->InternalSwap(CastToBase(&other->record_data_));
  err_msg_.Swap(&other->err_msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(locate_, other->locate_);
  swap(err_no_, other->err_no_);
  swap(total_count_, other->total_count_);
  swap(current_count_, other->current_count_);
  swap(from_, other->from_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Result::GetMetadata() const {
  protobuf_mydis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mydis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace neb
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::neb::Mydis_RedisOperate* Arena::CreateMaybeMessage< ::neb::Mydis_RedisOperate >(Arena* arena) {
  return Arena::CreateInternal< ::neb::Mydis_RedisOperate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::neb::Mydis_DbOperate_Condition* Arena::CreateMaybeMessage< ::neb::Mydis_DbOperate_Condition >(Arena* arena) {
  return Arena::CreateInternal< ::neb::Mydis_DbOperate_Condition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::neb::Mydis_DbOperate_ConditionGroup* Arena::CreateMaybeMessage< ::neb::Mydis_DbOperate_ConditionGroup >(Arena* arena) {
  return Arena::CreateInternal< ::neb::Mydis_DbOperate_ConditionGroup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::neb::Mydis_DbOperate_OrderBy* Arena::CreateMaybeMessage< ::neb::Mydis_DbOperate_OrderBy >(Arena* arena) {
  return Arena::CreateInternal< ::neb::Mydis_DbOperate_OrderBy >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::neb::Mydis_DbOperate* Arena::CreateMaybeMessage< ::neb::Mydis_DbOperate >(Arena* arena) {
  return Arena::CreateInternal< ::neb::Mydis_DbOperate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::neb::Mydis* Arena::CreateMaybeMessage< ::neb::Mydis >(Arena* arena) {
  return Arena::CreateInternal< ::neb::Mydis >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::neb::Record* Arena::CreateMaybeMessage< ::neb::Record >(Arena* arena) {
  return Arena::CreateInternal< ::neb::Record >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::neb::Field* Arena::CreateMaybeMessage< ::neb::Field >(Arena* arena) {
  return Arena::CreateInternal< ::neb::Field >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::neb::Result_DataLocate* Arena::CreateMaybeMessage< ::neb::Result_DataLocate >(Arena* arena) {
  return Arena::CreateInternal< ::neb::Result_DataLocate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::neb::Result* Arena::CreateMaybeMessage< ::neb::Result >(Arena* arena) {
  return Arena::CreateInternal< ::neb::Result >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
