// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg.proto

#include "msg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_msg_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_msg_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MsgBody_Request;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_msg_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MsgBody_Response;
}  // namespace protobuf_msg_2eproto
class MsgHeadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgHead>
      _instance;
} _MsgHead_default_instance_;
class MsgBody_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgBody_Request>
      _instance;
} _MsgBody_Request_default_instance_;
class MsgBody_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgBody_Response>
      _instance;
} _MsgBody_Response_default_instance_;
class MsgBodyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgBody>
      _instance;
  const ::MsgBody_Request* req_target_;
  const ::MsgBody_Response* rsp_result_;
} _MsgBody_default_instance_;
namespace protobuf_msg_2eproto {
static void InitDefaultsMsgHead() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MsgHead_default_instance_;
    new (ptr) ::MsgHead();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MsgHead::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgHead =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgHead}, {}};

static void InitDefaultsMsgBody_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MsgBody_Request_default_instance_;
    new (ptr) ::MsgBody_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MsgBody_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgBody_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgBody_Request}, {}};

static void InitDefaultsMsgBody_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MsgBody_Response_default_instance_;
    new (ptr) ::MsgBody_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MsgBody_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgBody_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgBody_Response}, {}};

static void InitDefaultsMsgBody() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MsgBody_default_instance_;
    new (ptr) ::MsgBody();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MsgBody::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MsgBody =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMsgBody}, {
      &protobuf_msg_2eproto::scc_info_MsgBody_Request.base,
      &protobuf_msg_2eproto::scc_info_MsgBody_Response.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_MsgHead.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgBody_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgBody_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgBody.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgHead, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgHead, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgHead, seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgHead, len_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgBody_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgBody_Request, route_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgBody_Request, route_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgBody_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgBody_Response, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgBody_Response, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgBody, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgBody, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::MsgBodyDefaultTypeInternal, req_target_),
  offsetof(::MsgBodyDefaultTypeInternal, rsp_result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgBody, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgBody, add_on_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgBody, trace_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgBody, msg_type_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::MsgHead)},
  { 8, -1, sizeof(::MsgBody_Request)},
  { 15, -1, sizeof(::MsgBody_Response)},
  { 22, -1, sizeof(::MsgBody)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MsgHead_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MsgBody_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MsgBody_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MsgBody_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "msg.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tmsg.proto\"0\n\007MsgHead\022\013\n\003cmd\030\001 \001(\007\022\013\n\003s"
      "eq\030\002 \001(\007\022\013\n\003len\030\003 \001(\017\"\351\001\n\007MsgBody\022&\n\nreq"
      "_target\030\001 \001(\0132\020.MsgBody.RequestH\000\022\'\n\nrsp"
      "_result\030\002 \001(\0132\021.MsgBody.ResponseH\000\022\014\n\004da"
      "ta\030\003 \001(\014\022\016\n\006add_on\030\004 \001(\014\022\020\n\010trace_id\030\005 \001"
      "(\t\032*\n\007Request\022\020\n\010route_id\030\001 \001(\r\022\r\n\005route"
      "\030\002 \001(\t\032%\n\010Response\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030"
      "\002 \001(\014B\n\n\010msg_typeb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 305);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msg.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_msg_2eproto

// ===================================================================

void MsgHead::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgHead::kCmdFieldNumber;
const int MsgHead::kSeqFieldNumber;
const int MsgHead::kLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgHead::MsgHead()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_2eproto::scc_info_MsgHead.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgHead)
}
MsgHead::MsgHead(const MsgHead& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cmd_, &from.cmd_,
    static_cast<size_t>(reinterpret_cast<char*>(&len_) -
    reinterpret_cast<char*>(&cmd_)) + sizeof(len_));
  // @@protoc_insertion_point(copy_constructor:MsgHead)
}

void MsgHead::SharedCtor() {
  ::memset(&cmd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&len_) -
      reinterpret_cast<char*>(&cmd_)) + sizeof(len_));
}

MsgHead::~MsgHead() {
  // @@protoc_insertion_point(destructor:MsgHead)
  SharedDtor();
}

void MsgHead::SharedDtor() {
}

void MsgHead::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgHead::descriptor() {
  ::protobuf_msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgHead& MsgHead::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_2eproto::scc_info_MsgHead.base);
  return *internal_default_instance();
}


void MsgHead::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgHead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cmd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&len_) -
      reinterpret_cast<char*>(&cmd_)) + sizeof(len_));
  _internal_metadata_.Clear();
}

bool MsgHead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgHead)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed32 cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &cmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 seq = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sfixed32 len = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgHead)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgHead)
  return false;
#undef DO_
}

void MsgHead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgHead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 cmd = 1;
  if (this->cmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->cmd(), output);
  }

  // fixed32 seq = 2;
  if (this->seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->seq(), output);
  }

  // sfixed32 len = 3;
  if (this->len() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(3, this->len(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgHead)
}

::google::protobuf::uint8* MsgHead::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MsgHead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 cmd = 1;
  if (this->cmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->cmd(), target);
  }

  // fixed32 seq = 2;
  if (this->seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->seq(), target);
  }

  // sfixed32 len = 3;
  if (this->len() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(3, this->len(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgHead)
  return target;
}

size_t MsgHead::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgHead)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // fixed32 cmd = 1;
  if (this->cmd() != 0) {
    total_size += 1 + 4;
  }

  // fixed32 seq = 2;
  if (this->seq() != 0) {
    total_size += 1 + 4;
  }

  // sfixed32 len = 3;
  if (this->len() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgHead::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgHead)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgHead* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgHead>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgHead)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgHead)
    MergeFrom(*source);
  }
}

void MsgHead::MergeFrom(const MsgHead& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgHead)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cmd() != 0) {
    set_cmd(from.cmd());
  }
  if (from.seq() != 0) {
    set_seq(from.seq());
  }
  if (from.len() != 0) {
    set_len(from.len());
  }
}

void MsgHead::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgHead::CopyFrom(const MsgHead& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgHead::IsInitialized() const {
  return true;
}

void MsgHead::Swap(MsgHead* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgHead::InternalSwap(MsgHead* other) {
  using std::swap;
  swap(cmd_, other->cmd_);
  swap(seq_, other->seq_);
  swap(len_, other->len_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgHead::GetMetadata() const {
  protobuf_msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgBody_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgBody_Request::kRouteIdFieldNumber;
const int MsgBody_Request::kRouteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgBody_Request::MsgBody_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_2eproto::scc_info_MsgBody_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgBody.Request)
}
MsgBody_Request::MsgBody_Request(const MsgBody_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  route_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.route().size() > 0) {
    route_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.route_);
  }
  route_id_ = from.route_id_;
  // @@protoc_insertion_point(copy_constructor:MsgBody.Request)
}

void MsgBody_Request::SharedCtor() {
  route_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  route_id_ = 0u;
}

MsgBody_Request::~MsgBody_Request() {
  // @@protoc_insertion_point(destructor:MsgBody.Request)
  SharedDtor();
}

void MsgBody_Request::SharedDtor() {
  route_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgBody_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgBody_Request::descriptor() {
  ::protobuf_msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgBody_Request& MsgBody_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_2eproto::scc_info_MsgBody_Request.base);
  return *internal_default_instance();
}


void MsgBody_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgBody.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  route_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  route_id_ = 0u;
  _internal_metadata_.Clear();
}

bool MsgBody_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgBody.Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 route_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &route_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string route = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_route()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->route().data(), static_cast<int>(this->route().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MsgBody.Request.route"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgBody.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgBody.Request)
  return false;
#undef DO_
}

void MsgBody_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgBody.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 route_id = 1;
  if (this->route_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->route_id(), output);
  }

  // string route = 2;
  if (this->route().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->route().data(), static_cast<int>(this->route().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MsgBody.Request.route");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->route(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgBody.Request)
}

::google::protobuf::uint8* MsgBody_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MsgBody.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 route_id = 1;
  if (this->route_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->route_id(), target);
  }

  // string route = 2;
  if (this->route().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->route().data(), static_cast<int>(this->route().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MsgBody.Request.route");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->route(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgBody.Request)
  return target;
}

size_t MsgBody_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgBody.Request)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string route = 2;
  if (this->route().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->route());
  }

  // uint32 route_id = 1;
  if (this->route_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->route_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgBody_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgBody.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgBody_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgBody_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgBody.Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgBody.Request)
    MergeFrom(*source);
  }
}

void MsgBody_Request::MergeFrom(const MsgBody_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgBody.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.route().size() > 0) {

    route_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.route_);
  }
  if (from.route_id() != 0) {
    set_route_id(from.route_id());
  }
}

void MsgBody_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgBody.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBody_Request::CopyFrom(const MsgBody_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgBody.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBody_Request::IsInitialized() const {
  return true;
}

void MsgBody_Request::Swap(MsgBody_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgBody_Request::InternalSwap(MsgBody_Request* other) {
  using std::swap;
  route_.Swap(&other->route_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(route_id_, other->route_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgBody_Request::GetMetadata() const {
  protobuf_msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgBody_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgBody_Response::kCodeFieldNumber;
const int MsgBody_Response::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgBody_Response::MsgBody_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_2eproto::scc_info_MsgBody_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgBody.Response)
}
MsgBody_Response::MsgBody_Response(const MsgBody_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:MsgBody.Response)
}

void MsgBody_Response::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

MsgBody_Response::~MsgBody_Response() {
  // @@protoc_insertion_point(destructor:MsgBody.Response)
  SharedDtor();
}

void MsgBody_Response::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgBody_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgBody_Response::descriptor() {
  ::protobuf_msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgBody_Response& MsgBody_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_2eproto::scc_info_MsgBody_Response.base);
  return *internal_default_instance();
}


void MsgBody_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgBody.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

bool MsgBody_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgBody.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgBody.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgBody.Response)
  return false;
#undef DO_
}

void MsgBody_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgBody.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // bytes msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgBody.Response)
}

::google::protobuf::uint8* MsgBody_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MsgBody.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // bytes msg = 2;
  if (this->msg().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgBody.Response)
  return target;
}

size_t MsgBody_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgBody.Response)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgBody_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgBody.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgBody_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgBody_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgBody.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgBody.Response)
    MergeFrom(*source);
  }
}

void MsgBody_Response::MergeFrom(const MsgBody_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgBody.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void MsgBody_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgBody.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBody_Response::CopyFrom(const MsgBody_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgBody.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBody_Response::IsInitialized() const {
  return true;
}

void MsgBody_Response::Swap(MsgBody_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgBody_Response::InternalSwap(MsgBody_Response* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgBody_Response::GetMetadata() const {
  protobuf_msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgBody::InitAsDefaultInstance() {
  ::_MsgBody_default_instance_.req_target_ = const_cast< ::MsgBody_Request*>(
      ::MsgBody_Request::internal_default_instance());
  ::_MsgBody_default_instance_.rsp_result_ = const_cast< ::MsgBody_Response*>(
      ::MsgBody_Response::internal_default_instance());
}
void MsgBody::set_allocated_req_target(::MsgBody_Request* req_target) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg_type();
  if (req_target) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      req_target = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, req_target, submessage_arena);
    }
    set_has_req_target();
    msg_type_.req_target_ = req_target;
  }
  // @@protoc_insertion_point(field_set_allocated:MsgBody.req_target)
}
void MsgBody::set_allocated_rsp_result(::MsgBody_Response* rsp_result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg_type();
  if (rsp_result) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rsp_result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rsp_result, submessage_arena);
    }
    set_has_rsp_result();
    msg_type_.rsp_result_ = rsp_result;
  }
  // @@protoc_insertion_point(field_set_allocated:MsgBody.rsp_result)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgBody::kReqTargetFieldNumber;
const int MsgBody::kRspResultFieldNumber;
const int MsgBody::kDataFieldNumber;
const int MsgBody::kAddOnFieldNumber;
const int MsgBody::kTraceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgBody::MsgBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_2eproto::scc_info_MsgBody.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgBody)
}
MsgBody::MsgBody(const MsgBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  add_on_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.add_on().size() > 0) {
    add_on_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.add_on_);
  }
  trace_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trace_id().size() > 0) {
    trace_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trace_id_);
  }
  clear_has_msg_type();
  switch (from.msg_type_case()) {
    case kReqTarget: {
      mutable_req_target()->::MsgBody_Request::MergeFrom(from.req_target());
      break;
    }
    case kRspResult: {
      mutable_rsp_result()->::MsgBody_Response::MergeFrom(from.rsp_result());
      break;
    }
    case MSG_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:MsgBody)
}

void MsgBody::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  add_on_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trace_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg_type();
}

MsgBody::~MsgBody() {
  // @@protoc_insertion_point(destructor:MsgBody)
  SharedDtor();
}

void MsgBody::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  add_on_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trace_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_msg_type()) {
    clear_msg_type();
  }
}

void MsgBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgBody::descriptor() {
  ::protobuf_msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgBody& MsgBody::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_2eproto::scc_info_MsgBody.base);
  return *internal_default_instance();
}


void MsgBody::clear_msg_type() {
// @@protoc_insertion_point(one_of_clear_start:MsgBody)
  switch (msg_type_case()) {
    case kReqTarget: {
      delete msg_type_.req_target_;
      break;
    }
    case kRspResult: {
      delete msg_type_.rsp_result_;
      break;
    }
    case MSG_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MSG_TYPE_NOT_SET;
}


void MsgBody::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  add_on_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trace_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_msg_type();
  _internal_metadata_.Clear();
}

bool MsgBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgBody)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .MsgBody.Request req_target = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req_target()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MsgBody.Response rsp_result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rsp_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes add_on = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_add_on()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trace_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trace_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trace_id().data(), static_cast<int>(this->trace_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MsgBody.trace_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgBody)
  return false;
#undef DO_
}

void MsgBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MsgBody.Request req_target = 1;
  if (has_req_target()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_req_target(), output);
  }

  // .MsgBody.Response rsp_result = 2;
  if (has_rsp_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_rsp_result(), output);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->data(), output);
  }

  // bytes add_on = 4;
  if (this->add_on().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->add_on(), output);
  }

  // string trace_id = 5;
  if (this->trace_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trace_id().data(), static_cast<int>(this->trace_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MsgBody.trace_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->trace_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgBody)
}

::google::protobuf::uint8* MsgBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MsgBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MsgBody.Request req_target = 1;
  if (has_req_target()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_req_target(), deterministic, target);
  }

  // .MsgBody.Response rsp_result = 2;
  if (has_rsp_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_rsp_result(), deterministic, target);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->data(), target);
  }

  // bytes add_on = 4;
  if (this->add_on().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->add_on(), target);
  }

  // string trace_id = 5;
  if (this->trace_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trace_id().data(), static_cast<int>(this->trace_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MsgBody.trace_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->trace_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgBody)
  return target;
}

size_t MsgBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgBody)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 3;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // bytes add_on = 4;
  if (this->add_on().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->add_on());
  }

  // string trace_id = 5;
  if (this->trace_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trace_id());
  }

  switch (msg_type_case()) {
    // .MsgBody.Request req_target = 1;
    case kReqTarget: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_type_.req_target_);
      break;
    }
    // .MsgBody.Response rsp_result = 2;
    case kRspResult: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_type_.rsp_result_);
      break;
    }
    case MSG_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgBody)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgBody)
    MergeFrom(*source);
  }
}

void MsgBody::MergeFrom(const MsgBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.add_on().size() > 0) {

    add_on_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.add_on_);
  }
  if (from.trace_id().size() > 0) {

    trace_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trace_id_);
  }
  switch (from.msg_type_case()) {
    case kReqTarget: {
      mutable_req_target()->::MsgBody_Request::MergeFrom(from.req_target());
      break;
    }
    case kRspResult: {
      mutable_rsp_result()->::MsgBody_Response::MergeFrom(from.rsp_result());
      break;
    }
    case MSG_TYPE_NOT_SET: {
      break;
    }
  }
}

void MsgBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBody::CopyFrom(const MsgBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBody::IsInitialized() const {
  return true;
}

void MsgBody::Swap(MsgBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgBody::InternalSwap(MsgBody* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  add_on_.Swap(&other->add_on_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  trace_id_.Swap(&other->trace_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msg_type_, other->msg_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgBody::GetMetadata() const {
  protobuf_msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MsgHead* Arena::CreateMaybeMessage< ::MsgHead >(Arena* arena) {
  return Arena::CreateInternal< ::MsgHead >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MsgBody_Request* Arena::CreateMaybeMessage< ::MsgBody_Request >(Arena* arena) {
  return Arena::CreateInternal< ::MsgBody_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MsgBody_Response* Arena::CreateMaybeMessage< ::MsgBody_Response >(Arena* arena) {
  return Arena::CreateInternal< ::MsgBody_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MsgBody* Arena::CreateMaybeMessage< ::MsgBody >(Arena* arena) {
  return Arena::CreateInternal< ::MsgBody >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
